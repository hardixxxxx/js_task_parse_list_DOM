{"mappings":"AAAA;AAEA,MAAM,OAAO,SAAS,aAAa,CAAC;AAEpC,MAAM,iBAAiB,CAAC,SAAW,CAAC,OAAO,OAAO,CAAC,SAAS;AAE5D,SAAS,SAAS,EAAE;IAClB,MAAM,QAAQ;WAAI,GAAG,QAAQ;KAAC,CAAC,IAAI,CACjC,CAAC,OAAO,QACN,eAAe,MAAM,OAAO,CAAC,MAAM,IACnC,eAAe,MAAM,OAAO,CAAC,MAAM;IAGvC,MAAM,OAAO,CAAC,CAAC,KAAO,KAAK,MAAM,CAAC;AACpC;AAEA,SAAS,aAAa,EAAE;IACtB,OAAO;WAAI,GAAG,QAAQ;KAAC,CAAC,GAAG,CAAC,CAAC,KAAQ,CAAA;YACnC,MAAM,GAAG,WAAW,CAAC,IAAI;YACzB,UAAU,GAAG,OAAO,CAAC,QAAQ;YAC7B,QAAQ,GAAG,OAAO,CAAC,MAAM;YACzB,KAAK,GAAG,OAAO,CAAC,GAAG;QACrB,CAAA;AACF;AAEA,SAAS;AACT,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\n\nconst salaryToNumber = (salary) => +salary.replace(/[$,]/g, '');\n\nfunction sortList(ul) {\n  const items = [...ul.children].sort(\n    (item1, item2) =>\n      salaryToNumber(item2.dataset.salary) -\n      salaryToNumber(item1.dataset.salary),\n  );\n\n  items.forEach((el) => list.append(el));\n}\n\nfunction getEmployees(ul) {\n  return [...ul.children].map((el) => ({\n    name: el.textContent.trim(),\n    position: el.dataset.position,\n    salary: el.dataset.salary,\n    age: el.dataset.age,\n  }));\n}\n\nsortList(list);\ngetEmployees(list)\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}